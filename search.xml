<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/01/30/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/Postmessage%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/01/30/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/Postmessage%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 align ="center">空 </h1><p>[TOC]</p><hr><h1 id="PostMessage"><a href="#PostMessage" class="headerlink" title="PostMessage"></a>PostMessage</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><blockquote><p><code>postMessage</code> 是一个用于在不同窗口或文档之间进行安全跨域通信的 Web API 方法。它允许一个窗口或 iframe 向另一个窗口或 iframe 发送消息，即使这些窗口或 iframe 不在同一个域中也可以安全使用。这是为了避免跨域限制而设计的一种机制。</p></blockquote><ul><li>基本语法如下：<br><code>otherWindow.postMessage(message, targetOrigin, [transfer]);</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">otherWindow: 目标窗口的引用，可以是另一个窗口、iframe 或者其他支持 postMessage 的对象。</span><br><span class="line">message: 要发送的消息数据，可以是字符串、数字、对象等。</span><br><span class="line">targetOrigin: 表示目标窗口的源（origin），这是一个字符串。如果你知道目标窗口的源，可以提供它，以增加安全性。可以是具体的源（例如，&quot;https://example.com&quot;），或者通配符 &quot;*&quot; 表示允许来自任意源的消息。</span><br><span class="line">transfer (可选): 一个可选的数组，包含要在消息中传递的 Transferable 对象，如 ArrayBuffer。</span><br><span class="line"></span><br><span class="line">在发送端，你可以使用 postMessage 将消息发送到目标窗口：</span><br><span class="line">const targetWindow = document.getElementById(&quot;target&quot;).contentWindow;</span><br><span class="line">targetWindow.postMessage(&quot;Hello, this is a message!&quot;, &quot;https://example.com&quot;);</span><br><span class="line"></span><br><span class="line">在接收端，你可以通过在 window 上监听 &quot;message&quot; 事件来捕获发送的消息：</span><br><span class="line">window.addEventListener(&quot;message&quot;, (event) =&gt; &#123;</span><br><span class="line">  // 处理接收到的消息</span><br><span class="line">  const receivedMessage = event.data;</span><br><span class="line">  console.log(receivedMessage);</span><br><span class="line">&#125;, false);</span><br><span class="line">这种机制通常用于在同一域之间的不同窗口或 iframe 之间进行通信，例如在父窗口和嵌套的 iframe 之间。</span><br></pre></td></tr></table></figure></li></ul><h2 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h2><ul><li>demo1</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line"> &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function openChild() &#123;</span><br><span class="line">    child = window.open(&#x27;demo2.html&#x27;, &#x27;popup&#x27;, &#x27;height=300px, width=500px&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">function sendMessage()&#123;</span><br><span class="line">    //发送的数据内容</span><br><span class="line">    let msg=&#123;pName : &quot;jack&quot;, pAge: &quot;12&quot;&#125;;</span><br><span class="line">    //发送消息数据数据到任意目标源, *指的是任意anyone</span><br><span class="line">    child.postMessage(msg,&#x27;*&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;fieldset&gt;</span><br><span class="line">            &lt;input type=&#x27;button&#x27; id=&#x27;btnopen&#x27; value=&#x27;Open child&#x27; onclick=&#x27;openChild();&#x27; /&gt;</span><br><span class="line">            &lt;input type=&#x27;button&#x27; id=&#x27;btnSendMsg&#x27; value=&#x27;Send Message&#x27; onclick=&#x27;sendMessage();&#x27; /&gt;</span><br><span class="line">        &lt;/fieldset&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>demo2</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        //添加事件监控消息</span><br><span class="line">    window.addEventListener(&quot;message&quot;, (event)=&gt;&#123;</span><br><span class="line">        let txt=document.getElementById(&quot;msg&quot;);</span><br><span class="line">        //接收传输过来的变量数据</span><br><span class="line">        txt.value=`Name is $&#123;event.data.pName&#125; Age is  $&#123;event.data.pAge&#125;` ;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;h1&gt;postMessage学习&lt;/h1&gt;</span><br><span class="line">        &lt;input type=&#x27;text&#x27; id=&#x27;msg&#x27;/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202401301354143.png" style="zoom:50%;" /><h1 id="危害演示"><a href="#危害演示" class="headerlink" title="危害演示"></a>危害演示</h1><ul><li>我们从本地创建直接访问hacker.html代码就可以串改deom2网页的内容</li><li>这里要使用setimeout函数，因为这样我猜是window.open 方法通常是异步的，它会在后台加载新文档，而不会等待文档完全加载。因此，使用 setTimeout 会等待一段时间，以确保新文档已经准备好接收消息。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line"> &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">childwin = window.open(&#x27;http://119.45.227.86/postmessage/demo2.html&#x27;);</span><br><span class="line"></span><br><span class="line">function sendMessage()&#123;</span><br><span class="line">    let msg=&#123;pName : &quot;attacker&quot;, pAge: &quot;16&quot;&#125;;</span><br><span class="line">    childwin.postMessage(msg,&#x27;*&#x27;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(function()&#123;setTimeout(&quot;sendMessage()&quot;,1000);&#125;()); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://typora-image-dzh.oss-cn-guangzhou.aliyuncs.com/undefined202401301410735.png" alt="image-20240130141053689"></p><ul><li>对于存在跳转漏洞即是herf跳转的，具体可以查看DOM-XSS靶场中的漏洞</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2024年计划</title>
      <link href="/2024/01/05/%E6%9D%82%E8%B0%88/2024%E5%B9%B4%E7%9B%AE%E6%A0%87/"/>
      <url>/2024/01/05/%E6%9D%82%E8%B0%88/2024%E5%B9%B4%E7%9B%AE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 align="center">2024年计划</h1><h1 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h1><blockquote><p>今天看了一天视频学了Hexo搭建博客，现在稍微懂一些吧。其实git还不是很懂，也是第一次发博客，花了一天的时间，希望这个博客也是让我坚持学习的动力吧（毕竟我是一个不怎么坚定的人）<br>第一个博客也是制定一下2024年的计划吧</p></blockquote><h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><h2 id="1-首先把企业src漏洞挖明，真的要好好专研门道！"><a href="#1-首先把企业src漏洞挖明，真的要好好专研门道！" class="headerlink" title="1.首先把企业src漏洞挖明，真的要好好专研门道！"></a>1.首先把<code>企业src漏洞挖明</code>，真的要好好专研门道！</h2><h2 id="2-尝试接触红队，起码看完红队笔记，试着打打HTB"><a href="#2-尝试接触红队，起码看完红队笔记，试着打打HTB" class="headerlink" title="2.尝试接触红队，起码看完红队笔记，试着打打HTB"></a>2.尝试接触红队，起码看完红队笔记，试着打打HTB</h2><h2 id="3-CTF看看能不能试着拿个奖"><a href="#3-CTF看看能不能试着拿个奖" class="headerlink" title="3.CTF看看能不能试着拿个奖"></a>3.CTF看看能不能试着拿个奖</h2><h2 id="4-保持情绪稳定，知行合一，尽量每天都学新知识写笔记"><a href="#4-保持情绪稳定，知行合一，尽量每天都学新知识写笔记" class="headerlink" title="4.保持情绪稳定，知行合一，尽量每天都学新知识写笔记"></a>4.保持<code>情绪稳定</code>，<code>知行合一</code>，尽量每天都学新知识写笔记</h2><h2 id="5-减肥！减肥！减肥！"><a href="#5-减肥！减肥！减肥！" class="headerlink" title="5.减肥！减肥！减肥！"></a>5.减肥！减肥！减肥！</h2>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> 目标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2024/01/05/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/%E6%BC%94%E7%A4%BA/"/>
      <url>/2024/01/05/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<pre><code class="javascript">    funtion a()&#123;        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        vconsole.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)        console.log(&quot;hello&quot;)    &#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
